<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= title %> - Job Details
  </title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f9fa;
    }

    .navbar {
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .card {
      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
      border: 1px solid rgba(0, 0, 0, 0.125);
      margin-bottom: 1.5rem;
    }

    .job-header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
    }

    .status-badge {
      font-size: 0.9rem;
      padding: 0.5rem 1rem;
      font-weight: 500;
    }

    .progress {
      height: 12px;
      border-radius: 6px;
    }

    .log-entry {
      border-left: 4px solid #dee2e6;
      padding: 0.75rem 1rem;
      margin-bottom: 0.5rem;
      background-color: #fff;
      border-radius: 0 0.375rem 0.375rem 0;
    }

    .log-entry.info {
      border-left-color: #0dcaf0;
    }

    .log-entry.warn {
      border-left-color: #ffc107;
      background-color: #fff9e6;
    }

    .log-entry.error {
      border-left-color: #dc3545;
      background-color: #fff5f5;
    }

    .log-entry.debug {
      border-left-color: #6c757d;
      background-color: #f8f9fa;
    }

    .log-timestamp {
      font-size: 0.8rem;
      color: #6c757d;
      font-family: monospace;
    }

    .log-message {
      margin: 0.25rem 0;
      font-weight: 500;
    }

    .log-details {
      font-size: 0.85rem;
      color: #495057;
      font-family: monospace;
      background-color: rgba(0, 0, 0, 0.05);
      padding: 0.5rem;
      border-radius: 0.25rem;
      margin-top: 0.5rem;
      white-space: pre-wrap;
      max-height: 200px;
      overflow-y: auto;
    }

    .job-metadata {
      background-color: #f8f9fa;
      border-radius: 0.375rem;
      padding: 1rem;
    }

    .metadata-item {
      display: flex;
      justify-content: space-between;
      padding: 0.25rem 0;
      border-bottom: 1px solid #e9ecef;
    }

    .metadata-item:last-child {
      border-bottom: none;
    }

    .metadata-label {
      font-weight: 500;
      color: #495057;
    }

    .metadata-value {
      color: #6c757d;
      font-family: monospace;
      font-size: 0.9rem;
    }

    .auto-refresh-indicator {
      color: #28a745;
      animation: pulse 2s infinite;
    }

    @keyframes pulse {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.5;
      }

      100% {
        opacity: 1;
      }
    }

    .logs-container {
      max-height: 600px;
      overflow-y: auto;
    }

    .navbar-brand {
      font-weight: 600;
    }

    .job-actions {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
    }

    .queue-info {
      background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
      color: #333;
      border: none;
    }
  </style>
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container-fluid">
      <a class="navbar-brand" href="/">
        <i class="fas fa-video me-2"></i>
        Video Transcoding Service
      </a>
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb mb-0">
          <li class="breadcrumb-item"><a href="/" class="text-white-50">Dashboard</a></li>
          <li class="breadcrumb-item active text-white" aria-current="page">Job Details</li>
        </ol>
      </nav>
      <div class="navbar-nav ms-auto">
        <div class="dropdown me-3">
          <button class="btn btn-outline-light btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
            <i class="fas fa-user me-1"></i>
            Admin
          </button>
          <ul class="dropdown-menu dropdown-menu-end">
            <li>
              <h6 class="dropdown-header">Logged in as Admin</h6>
            </li>
            <li>
              <hr class="dropdown-divider">
            </li>
            <li>
              <form method="POST" action="/logout" style="margin: 0;">
                <button type="submit" class="dropdown-item text-danger">
                  <i class="fas fa-sign-out-alt me-2"></i>
                  Logout
                </button>
              </form>
            </li>
          </ul>
        </div>
        <span class="navbar-text">
          <i class="fas fa-clock me-1"></i>
          <span id="current-time">
            <%= currentTime %>
          </span>
        </span>
      </div>
    </div>
  </nav>

  <div class="container-fluid py-4">
    <!-- Job Header -->
    <div class="row mb-4">
      <div class="col-12">
        <div class="card job-header">
          <div class="card-body">
            <div class="row align-items-center">
              <div class="col-md-8">
                <h3 class="mb-1">
                  <i class="fas fa-cog me-2"></i>
                  Job: <%= job.job_id.substring(0, 8) %>...
                </h3>
                <p class="mb-0 opacity-75">
                  <strong>File:</strong>
                  <%= job.original_key %>
                    <% if (job.metadata && job.metadata.videoName) { %>
                      | <strong>Video Name:</strong>
                      <%= job.metadata.videoName %>
                        <% } %>
                          <% if (job.metadata && job.metadata.environment) { %>
                            | <strong>Environment:</strong>
                            <span
                              class="badge bg-<%= job.metadata.environment === 'staging' ? 'warning' : 'light' %> text-dark">
                              <%= job.metadata.environment %>
                            </span>
                            <% } %>
                </p>
              </div>
              <div class="col-md-4 text-md-end">
                <div class="job-actions">
                  <button class="btn btn-light btn-sm" onclick="refreshJobData()" id="refresh-btn">
                    <i class="fas fa-sync-alt me-1"></i>
                    Refresh
                  </button>
                  <% if (job.status==='failed' ) { %>
                    <button class="btn btn-warning btn-sm" onclick="retryJob()">
                      <i class="fas fa-redo me-1"></i>
                      Retry
                    </button>
                    <% } %>
                      <a href="/jobs" class="btn btn-outline-light btn-sm">
                        <i class="fas fa-list me-1"></i>
                        All Jobs
                      </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="row">
      <!-- Job Status and Progress -->
      <div class="col-lg-4 mb-4">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">
              <i class="fas fa-info-circle me-2"></i>
              Job Status
            </h5>
          </div>
          <div class="card-body">
            <div class="mb-3">
              <% let statusClass='secondary' ; let statusIcon='fas fa-question' ; switch(job.status) { case 'queued' :
                statusClass='primary' ; statusIcon='fas fa-clock' ; break; case 'processing' : statusClass='warning' ;
                statusIcon='fas fa-cog fa-spin' ; break; case 'completed' : statusClass='success' ;
                statusIcon='fas fa-check' ; break; case 'failed' : statusClass='danger' ;
                statusIcon='fas fa-exclamation-triangle' ; break; } %>
                <span class="badge bg-<%= statusClass %> status-badge">
                  <i class="<%= statusIcon %> me-1"></i>
                  <%= job.status.charAt(0).toUpperCase() + job.status.slice(1) %>
                </span>
            </div>

            <div class="mb-3">
              <label class="form-label">Progress</label>
              <div class="progress mb-2">
                <div class="progress-bar 
                                    <% if (job.status === 'completed') { %>bg-success<% } 
                                       else if (job.status === 'failed') { %>bg-danger<% } 
                                       else if (job.status === 'processing') { %>bg-warning<% } 
                                       else { %>bg-primary<% } %>" style="width: <%= job.progress || 0 %>%">
                </div>
              </div>
              <small class="text-muted">
                <%= job.progress || 0 %>% complete
              </small>
            </div>

            <% if (job.error_message) { %>
              <div class="mb-3">
                <label class="form-label text-danger">Error Message</label>
                <div class="alert alert-danger">
                  <small>
                    <%= job.error_message %>
                  </small>
                </div>
              </div>
              <% } %>

                <% if (job.output_key) { %>
                  <div class="mb-3">
                    <label class="form-label text-success">Output</label>
                    <div class="alert alert-success">
                      <small class="font-monospace">
                        <%= job.output_key %>
                      </small>
                    </div>
                  </div>
                  <% } %>

                    <div class="job-metadata">
                      <h6 class="mb-3">Details</h6>
                      <div class="metadata-item">
                        <span class="metadata-label">Created:</span>
                        <span class="metadata-value">
                          <%= new Date(job.created_at).toLocaleString() %>
                        </span>
                      </div>
                      <% if (job.started_at) { %>
                        <div class="metadata-item">
                          <span class="metadata-label">Started:</span>
                          <span class="metadata-value">
                            <%= new Date(job.started_at).toLocaleString() %>
                          </span>
                        </div>
                        <% } %>
                          <% if (job.completed_at) { %>
                            <div class="metadata-item">
                              <span class="metadata-label">Completed:</span>
                              <span class="metadata-value">
                                <%= new Date(job.completed_at).toLocaleString() %>
                              </span>
                            </div>
                            <% } %>
                              <% if (job.duration) { %>
                                <div class="metadata-item">
                                  <span class="metadata-label">Duration:</span>
                                  <span class="metadata-value">
                                    <%= Math.round(job.duration) %>s
                                  </span>
                                </div>
                                <% } %>
                                  <% if (job.file_size) { %>
                                    <div class="metadata-item">
                                      <span class="metadata-label">File Size:</span>
                                      <span class="metadata-value">
                                        <%= (job.file_size / 1024 / 1024).toFixed(2) %> MB
                                      </span>
                                    </div>
                                    <% } %>
                                      <% if (job.resolutions && job.resolutions.length> 0) { %>
                                        <div class="metadata-item">
                                          <span class="metadata-label">Resolutions:</span>
                                          <span class="metadata-value">
                                            <% job.resolutions.forEach(function(resolution, index) { %>
                                              <span class="badge bg-light text-dark me-1">
                                                <%= resolution %>
                                              </span>
                                              <% }); %>
                                          </span>
                                        </div>
                                        <% } %>
                                          <% if (job.metadata && job.metadata.environment) { %>
                                            <div class="metadata-item">
                                              <span class="metadata-label">Environment:</span>
                                              <span class="metadata-value">
                                                <span
                                                  class="badge bg-<%= job.metadata.environment === 'staging' ? 'warning' : 'success' %>">
                                                  <%= job.metadata.environment %>
                                                </span>
                                              </span>
                                            </div>
                                            <% } %>
                                              <% if (job.metadata && job.metadata.callbackUrl) { %>
                                                <div class="metadata-item">
                                                  <span class="metadata-label">Callback URL:</span>
                                                  <span class="metadata-value">
                                                    <small class="font-monospace">
                                                      <%= job.metadata.callbackUrl %>
                                                    </small>
                                                  </span>
                                                </div>
                                                <% } %>
                    </div>
          </div>
        </div>

        <!-- Queue Information (if applicable) -->
        <% if (queueInfo) { %>
          <div class="card queue-info">
            <div class="card-header">
              <h6 class="mb-0">
                <i class="fas fa-list me-2"></i>
                Queue Information
              </h6>
            </div>
            <div class="card-body">
              <div class="metadata-item">
                <span class="metadata-label">Queue ID:</span>
                <span class="metadata-value">
                  <%= queueInfo.id %>
                </span>
              </div>
              <% if (queueInfo.attemptsMade) { %>
                <div class="metadata-item">
                  <span class="metadata-label">Attempts:</span>
                  <span class="metadata-value">
                    <%= queueInfo.attemptsMade %>
                  </span>
                </div>
                <% } %>
                  <% if (queueInfo.processedOn) { %>
                    <div class="metadata-item">
                      <span class="metadata-label">Started:</span>
                      <span class="metadata-value">
                        <%= new Date(queueInfo.processedOn).toLocaleString() %>
                      </span>
                    </div>
                    <% } %>
            </div>
          </div>
          <% } %>
      </div>

      <!-- Job Logs -->
      <div class="col-lg-8">
        <div class="card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
              <i class="fas fa-file-alt me-2"></i>
              Job Logs
            </h5>
            <div>
              <button class="btn btn-sm btn-outline-primary" onclick="toggleAutoRefresh()" id="auto-refresh-btn">
                <i class="fas fa-sync-alt me-1"></i>
                Auto Refresh
              </button>
              <span class="text-muted ms-2">
                <span id="log-count">
                  <%= job.logs ? job.logs.length : 0 %>
                </span> entries
              </span>
            </div>
          </div>
          <div class="card-body p-0">
            <div class="logs-container" id="logs-container">
              <% if (job.logs && job.logs.length> 0) { %>
                <% job.logs.forEach(function(log) { %>
                  <div class="log-entry <%= log.level %>">
                    <div class="d-flex justify-content-between align-items-start">
                      <div class="flex-grow-1">
                        <div class="log-timestamp">
                          <%= new Date(log.created_at).toLocaleString() %>
                            <% if (log.stage) { %>
                              | <span class="badge bg-secondary badge-sm">
                                <%= log.stage %>
                              </span>
                              <% } %>
                        </div>
                        <div class="log-message">
                          <%= log.message %>
                        </div>
                        <% if (log.details && typeof log.details==='object' ) { %>
                          <div class="log-details">
                            <%= JSON.stringify(log.details, null, 2) %>
                          </div>
                          <% } else if (log.details) { %>
                            <div class="log-details">
                              <%= log.details %>
                            </div>
                            <% } %>
                      </div>
                      <span
                        class="badge bg-<%= log.level === 'error' ? 'danger' : log.level === 'warn' ? 'warning' : log.level === 'info' ? 'primary' : 'secondary' %>">
                        <%= log.level.toUpperCase() %>
                      </span>
                    </div>
                  </div>
                  <% }); %>
                    <% } else { %>
                      <div class="text-center py-4">
                        <i class="fas fa-file-alt text-muted" style="font-size: 2rem;"></i>
                        <p class="text-muted mt-2">No logs available for this job yet.</p>
                      </div>
                      <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
  <script>
    let autoRefreshInterval;
    let isAutoRefresh = false;
    let lastLogTimestamp = '<%= job.logs && job.logs.length > 0 ? job.logs[job.logs.length - 1].created_at : new Date().toISOString() %>';

    function updateTime() {
      document.getElementById('current-time').textContent = new Date().toISOString();
    }

    function refreshJobData() {
      const btn = document.getElementById('refresh-btn');
      const icon = btn.querySelector('i');

      icon.classList.add('fa-spin');
      btn.disabled = true;

      window.location.reload();
    }

    function toggleAutoRefresh() {
      const btn = document.getElementById('auto-refresh-btn');

      if (isAutoRefresh) {
        clearInterval(autoRefreshInterval);
        isAutoRefresh = false;
        btn.innerHTML = '<i class="fas fa-sync-alt me-1"></i>Auto Refresh';
        btn.classList.remove('btn-success');
        btn.classList.add('btn-outline-primary');
      } else {
        autoRefreshInterval = setInterval(fetchNewLogs, 3000); // Check every 3 seconds
        isAutoRefresh = true;
        btn.innerHTML = '<i class="fas fa-sync-alt me-1 auto-refresh-indicator"></i>Auto Refresh';
        btn.classList.remove('btn-outline-primary');
        btn.classList.add('btn-success');
      }
    }

    async function fetchNewLogs() {
      try {
        const response = await fetch(`/api/job/<%= job.job_id %>/logs?since=${lastLogTimestamp}`);
        const data = await response.json();

        if (data.success && data.logs.length > 0) {
          appendNewLogs(data.logs);
          updateLogCount();
          lastLogTimestamp = data.logs[data.logs.length - 1].created_at;
        }

        // Also update job status
        const statusResponse = await fetch(`/api/job/<%= job.job_id %>/status`);
        const statusData = await statusResponse.json();

        if (statusData.success) {
          updateJobStatus(statusData.job);
        }
      } catch (error) {
        console.error('Failed to fetch new logs:', error);
      }
    }

    function appendNewLogs(logs) {
      const container = document.getElementById('logs-container');

      logs.forEach(log => {
        const logEntry = createLogEntry(log);
        container.appendChild(logEntry);
      });

      // Scroll to bottom
      container.scrollTop = container.scrollHeight;
    }

    function createLogEntry(log) {
      const div = document.createElement('div');
      div.className = `log-entry ${log.level}`;

      let detailsHtml = '';
      if (log.details) {
        const detailsText = typeof log.details === 'object'
          ? JSON.stringify(log.details, null, 2)
          : log.details;
        detailsHtml = `<div class="log-details">${detailsText}</div>`;
      }

      let stageHtml = '';
      if (log.stage) {
        stageHtml = `| <span class="badge bg-secondary badge-sm">${log.stage}</span>`;
      }

      const badgeClass = log.level === 'error' ? 'danger' :
        log.level === 'warn' ? 'warning' :
          log.level === 'info' ? 'primary' : 'secondary';

      div.innerHTML = `
                <div class="d-flex justify-content-between align-items-start">
                    <div class="flex-grow-1">
                        <div class="log-timestamp">
                            ${new Date(log.created_at).toLocaleString()}
                            ${stageHtml}
                        </div>
                        <div class="log-message">${log.message}</div>
                        ${detailsHtml}
                    </div>
                    <span class="badge bg-${badgeClass}">
                        ${log.level.toUpperCase()}
                    </span>
                </div>
            `;

      return div;
    }

    function updateJobStatus(job) {
      // Update progress bar
      const progressBar = document.querySelector('.progress-bar');
      if (progressBar) {
        progressBar.style.width = `${job.progress || 0}%`;
        progressBar.parentElement.nextElementSibling.textContent = `${job.progress || 0}% complete`;
      }

      // Update status badge if status changed
      const statusBadge = document.querySelector('.status-badge');
      if (statusBadge && statusBadge.textContent.toLowerCase().trim() !== job.status) {
        // Reload page if status changed significantly
        setTimeout(() => window.location.reload(), 1000);
      }
    }

    function updateLogCount() {
      const logEntries = document.querySelectorAll('.log-entry');
      document.getElementById('log-count').textContent = logEntries.length;
    }

    function retryJob() {
      if (confirm('Are you sure you want to retry this job?')) {
        fetch(`/api/job/<%= job.job_id %>/retry`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              alert('Job queued for retry');
              setTimeout(() => window.location.reload(), 1000);
            } else {
              alert('Failed to retry job: ' + data.error);
            }
          })
          .catch(error => {
            alert('Failed to retry job: ' + error.message);
          });
      }
    }

    // Update time every second
    setInterval(updateTime, 1000);

    // Auto-scroll logs to bottom on page load
    document.addEventListener('DOMContentLoaded', function () {
      const container = document.getElementById('logs-container');
      container.scrollTop = container.scrollHeight;
    });
  </script>
</body>

</html>
